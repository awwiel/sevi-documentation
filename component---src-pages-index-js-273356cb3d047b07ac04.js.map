{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/colors.js","webpack:///./src/utils/typography.js","webpack:///./src/components/seo.js","webpack:///./src/utils/theme.js","webpack:///./src/components/layout.js"],"names":["BlogIndex","styled","rebass__WEBPACK_IMPORTED_MODULE_2__","withConfig","displayName","componentId","rhythm","render","data","this","props","siteTitle","title","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_seo__WEBPACK_IMPORTED_MODULE_6__","keywords","React","Component","__webpack_exports__","pageQuery","m","module","require","default","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","Consumer","staticQueryData","children","PropTypes","object","query","isRequired","func","ProdPageRenderer","_ref","pageResources","loader","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","r","blue","primary","lightgray","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_fairy_gates__WEBPACK_IMPORTED_MODULE_1__","typography_theme_fairy_gates__WEBPACK_IMPORTED_MODULE_1___default","_colors__WEBPACK_IMPORTED_MODULE_2__","FairyGates","color","colors","background","textShadow","blockquote","borderLeftColor","typography","scale","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","string","theme","breakpoints","fontSizes","space","fonts","sans","mono","shadows","small","large","buttons","backgroundColor","fontWeight","Header","dist","p","Container","Layout","react_default","styled_components_browser_esm","Fragment","py","mb","fontSize","display","mt","ml","variant","onClick","navigate","style","marginTop","marginBottom"],"mappings":"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","file":"component---src-pages-index-js-273356cb3d047b07ac04.js","sourcesContent":["import React from 'react'\nimport { Box, Heading } from 'rebass'\nimport { Link, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\nconst PostItem = styled(Box)`\n  & ~ & {\n    margin-top: 50px;\n  }\n`\n\nconst PostTitle = styled(Heading)`\n  margin-top: ${rhythm(1 / 4)};\n  margin-bottom: ${rhythm(1 / 4)};\n`\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {/* {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <PostItem key={node.fields.slug}>\n              <PostTitle fontSize={5}>\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </PostTitle>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </PostItem>\n          )\n        })} */}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","export const blue = '#3742fa'\nexport const primary = '#3742fa'\nexport const lightgray = '#F5F6F7'\n","import Typography from 'typography'\nimport FairyGates from 'typography-theme-fairy-gates'\nimport * as colors from './colors'\n\nFairyGates.headerFontFamily = ['Source Sans Pro']\nFairyGates.bodyFontFamily = ['Source Sans Pro']\n\nFairyGates.overrideThemeStyles = () => {\n  return {\n    a: {\n      color: colors.primary,\n      background: 'none',\n      textShadow: 'none',\n    },\n    blockquote: {\n      borderLeftColor: colors.primary,\n    },\n  }\n}\n\nconst typography = new Typography(FairyGates)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import * as colors from './colors'\n\nexport default {\n  colors,\n  breakpoints: ['40em', '52em', '64em'],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  fonts: {\n    sans: 'system-ui, sans-serif',\n    mono: 'Menlo, monospace',\n  },\n  shadows: {\n    small: '0 0 4px rgba(0, 0, 0, .125)',\n    large: '0 0 24px rgba(0, 0, 0, .125)',\n  },\n  buttons: {\n    primary: {\n      color: '#fff',\n      backgroundColor: colors.primary,\n      fontWeight: '600',\n    },\n  },\n}\n","import React from 'react'\nimport { navigate } from 'gatsby'\nimport { Button, Box, Heading } from 'rebass'\nimport { ThemeProvider } from 'styled-components'\nimport styled from 'styled-components'\n\nimport theme from '../utils/theme'\nimport { rhythm } from '../utils/typography'\n\nconst Header = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: ${p => p.theme.colors.lightgray};\n`\n\nconst Container = styled(Box)`\n  max-width: 720px;\n  margin: 0 auto;\n`\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props\n    return (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <Header py={5} mb={5}>\n            <Heading fontSize={[6, 7]}>Sevi Documentation</Heading>\n            <Heading fontWeight={400}>The sevi how!</Heading>\n            <Box display=\"flex\" mt={4}>\n              <Button\n                ml={2}\n                variant=\"primary\"\n                onClick={() => navigate('/docs')}\n              >\n                Getting Started\n              </Button>\n            </Box>\n          </Header>\n          <Container>\n            <main>{children}</main>\n            <hr\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: rhythm(1),\n              }}\n            />\n            {/* <Box as=\"footer\" mb={4}>\n              © {new Date().getFullYear()}, Built with\n              {` `}\n              <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n            </Box> */}\n          </Container>\n        </React.Fragment>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}